MetaGPA (Metagenomics Genome and Phenome Association (MetaGPA) Analysis)

##################################

Main pipeline

Requirements:
1. tools installed to PATH: 
SPAdes (32 threads, CPU memory 350)
cd-hit (32 threads)
hmmsearch  (32 threads)
bowite2   (8 threads)
bedtools 

2. modules preinstalled in python: 
os, subprocess, numpy, matplotlib.pyplot, seaborn, scipy.stats, 
statsmodels.stats.multitest, pandas, argparse

3. python3

4. Pfam-A.hmm 
The PfamA database used in the work is downloaded form http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam33.0/
Release = 33.0



Usage:

python main_pipeline.py -1 <case.1.fq> <control.1.fq> -2 <case.2.fq> <control.2.fq> -P <path_to_pfama.hmm> -C 3 -L 1000 

options:
-L            minimum contig length, int, default 0
-C            enrichment score cutoff, float, default 0  
-P            path to pfama.hmm

input file:
-1            two read1 fqs, ordered by: case.1.fastq control.1.fastq
-2            two read2 fqs, ordered by: case.2.fastq control.2.fastq

1. the supported input file formats are FASTQ with optional compression (e.g. case.1.fastq, case.1.fq, case.1.fq.gz)
2. FASTQ files needs to be trimmed
3. pool read1 files and read2 files respectively if containing duplicates


output file:
all_contigs.nd.fa            all contigs assembled from case and control samples, redundant contigs removed

all_contigs_pfam_a.gtf       edited hmmsearch output file, contain 9 tab-delimited fields:
                               1   seqname     <contig_id>
                               2   source      .
                               3   feature     CDS
                               4   start       <start_bp>
                               5   end         <end_bp>
                               6   score       .
                               7   strand      +/-
                               8   frame       0
                               9   attribute   name "<query_name>";accession "<query_accession>";description "<query_description>";E_value "<E_value>"

contig_enrichment.csv         contig enrichment scores, contain 8 comma-delimited fields:
                               1   contig_id      <contig_id>
                               2   start          <start_bp>
                               3   end            <end_bp>
                               4   control_counts <mapped reads number in control sample>
                               5   case_counts    <mapped reads number in case sample>
                               6   RPKM(Ctrl)     <Reads Per Kb per Million reads in control>
                               7   RPKM(Case)     <Reads Per Kb per Million reads in case>
                               8   enrichment     <RPKM(Case)/RPKM(Control)>

contig_enrichment.png         stripplot of contig enrichment scores, group by control or case contigs

modified_contigs.fa           modified contigs: enrichment score >= cutoff
unmodified_contigs.fa         unmodified contigs: enrichment score < cutoff

modified_contigs_pfam_a.gtf   pfam_a file of modified contigs
unmodified_contigs_pfam_a.gtf pfam_a file of unmodified contigs

pfam_a_statistics.csv         statistics of pfam a domains, contain 6 comma-delimited fields:
                               1   pfam                      <pfam name>
                               2   counts_modified_contigs   <counts on modified contigs>
                               3   counts_unmodified_contigs <counts on unmodified contigs>
                               4   p_value                   <two sided fisher exact test p value>
                               5   corrected_p_value         <bonferroni correction for multitest>
      

cleared tmp file:

./sapdes/                 dir, assembly output files
case.fa                   contigs assembled from case read1 and read2, filtered by minimum contig length
control.fa                contigs assembled form control read1 and read2, filtered by minimum contig length
all_contigs.fa            concatenate case.fa and control.fa
all_contigs.nd.fa.clstr   cd-hit output: clusters for redundant contigs
translated.fa             protein fasta of all contigs
all_contigs.out           hmmsearch output file
tmp.*.bt2                 bowtie2 build index files
case.bam     
case.bam.bai
control.bam
control.bam.bai
tmp.bed
multicov.tmp
modified_contigs_pfam_a_counts.csv
unmodified_contigs_pfam_a_counts.csv
merged_pfam_a_counts.csv

#################################

Phylogenetics

Requirements:
1. files generated by main_pipeline.py:
all_contigs_pfam_a.gtf
modified_contigs_pfam_a.gtf
unmodified_contigs_pfam_a.gtf
modified_contigs.fa
unmodified_contigs.fa

2. tools installed to PATH:
muscle
RAxML


Usage:
python phylogenetics.py --pfam pfam_name

options:
--pfam           pfam of interest

input:

output:
<pfam>.faa                         pfam fasta file 
<pfam>.index                       index of contigs
RAxML_*.<pfam>.tree                raxml output files


##################################

co_occurrence

Requirements:
1. files generated by main_pipeline.py:
modified_contigs_pfam_a.gtf
pfam_a_statistics.csv


2. tools installed to PATH:


3. package installed on R:
cooccur


Usage:
python co_occurrence.py --number 20
R < co_occurrence.R --no-save 

options:
--number           generate a matrix file for the top chosen number of enriched pfams as listed in the pfam_a_statistics.csv file, int, default 20

input:

output:
enriched_pfam_a_matrix.csv                   file to be used in co_occurrence.R 
enriched_pfam_prob_table.csv                 cooccur output file      
significant_negative_correlation.csv         positive correlations with p < 0.05
significant_positive_correlation.csv         negative correlations with p < 0.05
